import java.nio.file.Files

subprojects {
    apply plugin: 'java-library'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        testImplementation "org.mockito:mockito-core:3.3.3"
    }

    test {
        useJUnitPlatform()
    }

    task copyJarToRoot {
        doLast {
            try {
                Files.walk(buildDir.toPath().resolve("libs")).forEach {
                    def fileName = it.toFile().name
                    if (!fileName.endsWith(".jar")) {
                        return
                    }
                    def destination = rootProject.buildDir.toPath().resolve("libs").resolve(fileName)
                    Files.deleteIfExists(destination)
                    Files.createDirectories(destination.parent)
                    Files.copy(it, destination)
                }
            } catch (Exception e) {
                e.printStackTrace()
            }
        }
    }

    build {
        finalizedBy copyJarToRoot
    }
}